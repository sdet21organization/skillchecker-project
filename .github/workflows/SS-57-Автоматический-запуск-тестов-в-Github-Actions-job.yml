name: Maven Tests with Allure

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main

jobs:
  api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # —á—Ç–æ–±—ã –ø–æ–¥—Ç—è–Ω—É—Ç—å –≤–µ—Ç–∫—É gh-pages —Ç–æ–∂–µ

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run API Tests
        run: mvn clean test -f api-tests/pom.xml -Dmaven.test.failure.ignore=true

      - name: Upload Allure Results (API)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: api-tests/target/allure-results

  ui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ v4 –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
        with:
          fetch-depth: 0 # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –±—É–¥—É—â–∏—Ö –Ω—É–∂–¥

      - uses: actions/setup-java@v4 # –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ v4 –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run UI Tests
        run: mvn clean test -f ui-tests/pom.xml -Dmaven.test.failure.ignore=true

      - name: Upload Allure Results (UI)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-ui
          path: ui-tests/target/allure-results


  allure-report:
   needs: [ api-tests, ui-tests ]
   runs-on: ubuntu-latest
   if: always()
   steps:
    - uses: actions/checkout@v4 # –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ v4
      with:
        fetch-depth: 0

    - name: Download Allure Results (API)
      uses: actions/download-artifact@v4
      with:
        name: allure-results-api
        path: allure-results/api

    - name: Download Allure Results (UI)
      uses: actions/download-artifact@v4
      with:
        name: allure-results-ui
        path: allure-results/ui

    - name: Merge Allure Results
      run: |
        mkdir -p merged-allure-results
        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ find –∏ xargs –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ, –∏—Å–∫–ª—é—á–∞—è –ø–∞–ø–∫–∏-–∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã,
        # —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º, –µ—Å–ª–∏ –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞
        find allure-results/api -mindepth 1 -maxdepth 1 -exec cp -r {} merged-allure-results/ \; || true
        find allure-results/ui -mindepth 1 -maxdepth 1 -exec cp -r {} merged-allure-results/ \; || true

    - name: Restore Allure History üíæ
      uses: actions/checkout@v4 # –ò—Å–ø–æ–ª—å–∑—É–µ–º action –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
      with:
        repository: ${{ github.repository }}
        ref: gh-pages
        path: gh-pages-branch
        fetch-depth: 0

    - name: Copy Allure History
      run: |
        BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
        # –ü—Ä–∏ –ø—É—Å—Ç–æ–º github.head_ref (–¥–ª—è push –≤ main) –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –≤–µ—Ç–∫–∏
        if [ -d "gh-pages-branch/${BRANCH_NAME}/history" ]; then
          mkdir -p merged-allure-results/history
          cp -r gh-pages-branch/${BRANCH_NAME}/history/* merged-allure-results/history/
          echo "History restored from gh-pages/${BRANCH_NAME}/history"
        else
          echo "No existing history found for branch: ${BRANCH_NAME}"
        fi

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@v1.7
      with:
        allure_results: merged-allure-results
        allure_report: allure-report
        # allure_history –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç.–∫. –∏—Å—Ç–æ—Ä–∏—è —É–∂–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ allure_results

    - name: Save Allure History
      run: |
        BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –≤ –∫–æ—Ä–µ–Ω—å –æ—Ç—á–µ—Ç–∞ –¥–ª—è –¥–µ–ø–ª–æ—è
        mkdir -p allure-report/history
        cp -r merged-allure-results/history/* allure-report/history/ || true
        # –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
        mkdir -p allure-report/${BRANCH_NAME}/history
        cp -r allure-report/history/* allure-report/${BRANCH_NAME}/history/

    - name: Deploy Allure Report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        # –ü—É–±–ª–∏–∫—É–µ–º –æ—Ç—á–µ—Ç –≤ –∫–æ—Ä–µ–Ω—å –¥–ª—è main –∏ –≤ –ø–æ–¥–ø–∞–ø–∫–∏ –¥–ª—è feature-–≤–µ—Ç–æ–∫
        destination_dir: ${{ github.head_ref || github.ref_name }}
        # force_orphan: true # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≥—Ä—è–∑–Ω—è—Ç—å gh-pages –ª–∏—à–Ω–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏

    - name: Comment PR with Allure Report Link
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const branchName = context.payload.pull_request.head.ref;
          const repoName = context.repo.repo;
          const owner = context.repo.owner;
          // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: https://owner.github.io/repo/branch-name/
          const reportUrl = `https://${owner}.github.io/${repoName}/${branchName}/`;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner,
            repo: repoName,
            body: `‚úÖ **Allure Report** –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: [–æ—Ç–∫—Ä—ã—Ç—å –æ—Ç—á—ë—Ç](${reportUrl})`
          });

    - name: Send Discord Notification
      if: always()
      env:
       DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
            branch="${{ github.head_ref || github.ref_name }}"
            report_url="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${branch}/"
            
            passed=$(jq '.statistic.passed' allure-report/widgets/summary.json)
            failed=$(jq '.statistic.failed' allure-report/widgets/summary.json)
            broken=$(jq '.statistic.broken' allure-report/widgets/summary.json)
            skipped=$(jq '.statistic.skipped' allure-report/widgets/summary.json)
            total=$(jq '.statistic.total' allure-report/widgets/summary.json)
            
            color=3066993
            
            payload=$(jq -n \
              --arg passed "$passed" \
              --arg failed "$failed" \
              --arg broken "$broken" \
              --arg skipped "$skipped" \
              --arg total "$total" \
              --arg url "$report_url" \
              --arg branch "$branch" \
              --arg repo "${{ github.repository }}" \
              --argjson color "$color" \
              '{
                "embeds": [
                  {
                   "title": "Allure Report",
                   "url": $url,
                   "color": $color,
                   "fields": [
                     {
                      "name": "üìÅ ",
                      "value": $repo,
                      "inline": true
                     },
                    {
                     "name": "üåø ",
                     "value": $branch,
                     "inline": true
                    },
                    {
                      "name": "Test Results",
                      "value": "‚úÖ Passed \($passed)‚ÄÉ‚ö†Ô∏è Broken \($broken)‚ÄÉ‚ùå Failed \($failed)‚ÄÉ‚è≠Ô∏è Skipped \($skipped)‚ÄÉüìä Total \($total)",
                      "inline": false
                     }
                    ]
                  }
                ]
               }')
            
            curl -H "Content-Type: application/json" \
                -d "$payload" \
                "$DISCORD_WEBHOOK_URL"