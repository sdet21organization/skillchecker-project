name: Maven Tests with Allure

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main

jobs:
  api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # —á—Ç–æ–±—ã –ø–æ–¥—Ç—è–Ω—É—Ç—å –≤–µ—Ç–∫—É gh-pages —Ç–æ–∂–µ

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run API Tests
        run: mvn clean test -f api-tests/pom.xml -Dmaven.test.failure.ignore=true

      - name: Upload Allure Results (API)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: api-tests/target/allure-results

  ui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run UI Tests
        run: mvn clean test -f ui-tests/pom.xml -Dmaven.test.failure.ignore=true

      - name: Upload Allure Results (UI)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-ui
          path: ui-tests/target/allure-results

  allure-report:
    needs: [api-tests, ui-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout Code (for Allure deployment)
        # Pull Request –∏ deploy —Ç—Ä–µ–±—É—é—Ç –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è Allure History
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # –í–∫–ª—é—á–µ–Ω fetch-depth –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å—Ç–æ—Ä–∏–∏ gh-pages –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤–µ—Ç–æ–∫

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          # –°–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –≤ –æ–¥–Ω—É –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É (—Å–æ–∑–¥–∞—Å—Ç –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ –∏–º–µ–Ω–∞–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤)
          path: downloaded-allure-results

      - name: Combine Results
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –≤ –æ–¥–Ω—É –æ–±—â—É—é –ø–∞–ø–∫—É combined-allure-results
        run: |
          mkdir -p combined-allure-results
          # allure-results-api –∏ allure-results-ui - —ç—Ç–æ –∏–º–µ–Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
          cp -r downloaded-allure-results/allure-results-api/* combined-allure-results/ || true
          cp -r downloaded-allure-results/allure-results-ui/* combined-allure-results/ || true

      - name: Allure Report Generation and GitHub Pages Deployment
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º action –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∏ –¥–µ–ø–ª–æ—è –Ω–∞ gh-pages
        uses: simple-elf/allure-report-action@v1.7
        with:
          # –ü–∞–ø–∫–∞ —Å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
          allure_results: combined-allure-results
          # –¶–µ–ª–µ–≤–∞—è –≤–µ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞
          gh_pages_branch: gh-pages
          # –ü–∞–ø–∫–∞ –≤–Ω—É—Ç—Ä–∏ gh-pages –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏)
          report_path: ${{ env.BRANCH_NAME }}
          # –¢–æ–∫–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # –í–∫–ª—é—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ (–¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—É—Ç–∏ report_path)
          allure_history: allure-history

      - name: Comment PR with Allure Report Link
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = process.env.BRANCH_NAME;
            const repoName = context.repo.repo;
            const owner = context.repo.owner;
            // –§–æ—Ä–º–∏—Ä—É–µ–º URL: https://<owner>.github.io/<repo>/<branch-name>/
            const reportUrl = `https://${owner}.github.io/${repoName}/${branchName}/`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner,
              repo: repoName,
              body: `‚úÖ **–û—Ç—á—ë—Ç Allure —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∏ —Ç—Ä–µ–Ω–¥–∞–º–∏ –¥–æ—Å—Ç—É–ø–µ–Ω:** [–æ—Ç–∫—Ä—ã—Ç—å –æ—Ç—á—ë—Ç](${reportUrl})\n\n*(–û—Ç—á—ë—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–∞ –≤–µ—Ç–∫—É \`gh-pages\` –≤ –ø–∞–ø–∫—É \`${branchName}/\`)*`
            });

      - name: Send Discord Notification
        if: github.ref == 'refs/heads/main'
        env:
         DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
            branch="${{ github.head_ref || github.ref_name }}"
            report_url="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${branch}/"
            
            passed=$(jq '.statistic.passed' allure-report/widgets/summary.json)
            failed=$(jq '.statistic.failed' allure-report/widgets/summary.json)
            broken=$(jq '.statistic.broken' allure-report/widgets/summary.json)
            skipped=$(jq '.statistic.skipped' allure-report/widgets/summary.json)
            total=$(jq '.statistic.total' allure-report/widgets/summary.json)
            
            color=3066993
            
            payload=$(jq -n \
              --arg passed "$passed" \
              --arg failed "$failed" \
              --arg broken "$broken" \
              --arg skipped "$skipped" \
              --arg total "$total" \
              --arg url "$report_url" \
              --arg branch "$branch" \
              --arg repo "${{ github.repository }}" \
              --argjson color "$color" \
              '{
                "embeds": [
                  {
                   "title": "Allure Report",
                   "url": $url,
                   "color": $color,
                   "fields": [
                     {
                      "name": "üìÅ ",
                      "value": $repo,
                      "inline": true
                     },
                    {
                     "name": "üåø ",
                     "value": $branch,
                     "inline": true
                    },
                    {
                      "name": "Test Results",
                      "value": "‚úÖ Passed \($passed)‚ÄÉ‚ö†Ô∏è Broken \($broken)‚ÄÉ‚ùå Failed \($failed)‚ÄÉ‚è≠Ô∏è Skipped \($skipped)‚ÄÉüìä Total \($total)",
                      "inline": false
                     }
                    ]
                  }
                ]
               }')
            
            curl -H "Content-Type: application/json" \
                -d "$payload" \
                "$DISCORD_WEBHOOK_URL"